Application 3: Report
DataType: Doubly Linked Circular List

Big O Runtimes:
createDataSet() : O(1)
destroyDataSet(): O(n)
numItems()	: O(1)
addLast()	: O(1)
removeItem()	: O(n)
searchID()	: O(n)
searchAge()	: O(n)
getItems()	: O(n)
maxAgeGap()	: O(n)

Reason: In this case, it was mentioned that there were a very flexible amount of students in the school. Therefore, we need dynamic memory for this purpose. Using a type of linked list meant that it was possible to add as many students as computer memory could handle. While the application only called for using 1000 students in its test process, it was important to ensure that the program could run under the extreme cases. A hash table would not work for this because hashing as the table gets very full is very inefficient as it begins to look a lot like an unsorted array. 
